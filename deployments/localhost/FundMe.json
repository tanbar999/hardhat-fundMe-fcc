{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe5fafc8782c1387814cad0da4b559da9b055a38cf7555c82fb3c78b10144025e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1017069",
    "logsBloom": "0x
    "blockHash": "0x583ea31a030f0fd9dbeafbc06f526d4bff031189b138aa51ecbf6e16f300848e",
    "transactionHash": "0xe5fafc8782c1387814cad0da4b559da9b055a38cf7555c82fb3c78b10144025e",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1017069",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "9db095e7bcb5af9b9d9ad0bf608b57e0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tanisk Annpurna\",\"details\":\"This implements price feed as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a sample smart contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n/** @title A contract for crowd funding\\r\\n *  @author Tanisk Annpurna\\r\\n *  @notice This is a sample smart contract\\r\\n *  @dev This implements price feed as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n    //Type Declarations\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    //State variables\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n    address[] private s_funders;\\r\\n    address private immutable i_owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (i_owner != msg.sender) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"ETH amount is too low\\\");\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw() public payable onlyOwner {\\r\\n        for (uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++) {\\r\\n            s_addressToAmountFunded[s_funders[funderIndex]] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public payable onlyOwner {\\r\\n        address[] memory m_funders = s_funders;\\r\\n        for (uint256 funderIndex = 0; funderIndex < m_funders.length; funderIndex++) {\\r\\n            s_addressToAmountFunded[m_funders[funderIndex]] = 0;\\r\\n        }\\r\\n\\r\\n        s_funders = new address[](0);\\r\\n\\r\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getFunders(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(address funder) public view returns (uint256) {\\r\\n        return s_addressToAmountFunded[funder];\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7089d277b662349bec41996967ed65bb7ad1bed7f93e5c621564556dcef2e7c1\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) * 1000000000000000000;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3ece559398d00e3cc82f05c63bb4a47375bd28e7cf6b4ad9a37bcde4e657a334\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012883803806200128883398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516111086200018060003960008181610242015281816104740152818161061501526107ee01526111086000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012f5780639e87a5cd1461015a578063b60d428814610185578063be2693f01461018f5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610104575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aa0565b610199565b6040516100b49190610ae6565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b2d565b6101e1565b6040516100f19190610b69565b60405180910390f35b610102610229565b005b34801561011057600080fd5b50610119610463565b6040516101269190610ae6565b60405180910390f35b34801561013b57600080fd5b50610144610470565b6040516101519190610b69565b60405180910390f35b34801561016657600080fd5b5061016f610498565b60405161017c9190610be3565b60405180910390f35b61018d6104c2565b005b6101976105fc565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106101f7576101f6610bfe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610353576000806000600184815481106102d7576102d6610bfe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061034b90610c5c565b9150506102b1565b50600067ffffffffffffffff81111561036f5761036e610ca5565b5b60405190808252806020026020018201604052801561039d5781602001602082028036833780820191505090505b50600190805190602001906103b3929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103da90610d05565b60006040518083038185875af1925050503d8060008114610417576040519150601f19603f3d011682016040523d82523d6000602084013e61041c565b606091505b5050905080610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790610d77565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610501600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ba90919063ffffffff16565b1015610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053990610de3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105909190610e03565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610681576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561070557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106bb575b5050505050905060005b81518110156107895760008060008484815181106107305761072f610bfe565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061078190610c5c565b91505061070f565b50600067ffffffffffffffff8111156107a5576107a4610ca5565b5b6040519080825280602002602001820160405280156107d35781602001602082028036833780820191505090505b50600190805190602001906107e9929190610996565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083090610d05565b60006040518083038185875af1925050503d806000811461086d576040519150601f19603f3d011682016040523d82523d6000602084013e610872565b606091505b50509050806108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90610d77565b60405180910390fd5b5050565b6000806108c6836108f6565b90506000670de0b6b3a764000085836108df9190610e59565b6108e99190610e59565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093f57600080fd5b505afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610f40565b5050509150506402540be4008161098e9190610fbb565b915050919050565b828054828255906000526020600020908101928215610a0f579160200282015b82811115610a0e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b6565b5b509050610a1c9190610a20565b5090565b5b80821115610a39576000816000905550600101610a21565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6d82610a42565b9050919050565b610a7d81610a62565b8114610a8857600080fd5b50565b600081359050610a9a81610a74565b92915050565b600060208284031215610ab657610ab5610a3d565b5b6000610ac484828501610a8b565b91505092915050565b6000819050919050565b610ae081610acd565b82525050565b6000602082019050610afb6000830184610ad7565b92915050565b610b0a81610acd565b8114610b1557600080fd5b50565b600081359050610b2781610b01565b92915050565b600060208284031215610b4357610b42610a3d565b5b6000610b5184828501610b18565b91505092915050565b610b6381610a62565b82525050565b6000602082019050610b7e6000830184610b5a565b92915050565b6000819050919050565b6000610ba9610ba4610b9f84610a42565b610b84565b610a42565b9050919050565b6000610bbb82610b8e565b9050919050565b6000610bcd82610bb0565b9050919050565b610bdd81610bc2565b82525050565b6000602082019050610bf86000830184610bd4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6782610acd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c9a57610c99610c2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cef600083610cd4565b9150610cfa82610cdf565b600082019050919050565b6000610d1082610ce2565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d61600b83610d1a565b9150610d6c82610d2b565b602082019050919050565b60006020820190508181036000830152610d9081610d54565b9050919050565b7f45544820616d6f756e7420697320746f6f206c6f770000000000000000000000600082015250565b6000610dcd601583610d1a565b9150610dd882610d97565b602082019050919050565b60006020820190508181036000830152610dfc81610dc0565b9050919050565b6000610e0e82610acd565b9150610e1983610acd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4e57610e4d610c2d565b5b828201905092915050565b6000610e6482610acd565b9150610e6f83610acd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ea857610ea7610c2d565b5b828202905092915050565b600069ffffffffffffffffffff82169050919050565b610ed281610eb3565b8114610edd57600080fd5b50565b600081519050610eef81610ec9565b92915050565b6000819050919050565b610f0881610ef5565b8114610f1357600080fd5b50565b600081519050610f2581610eff565b92915050565b600081519050610f3a81610b01565b92915050565b600080600080600060a08688031215610f5c57610f5b610a3d565b5b6000610f6a88828901610ee0565b9550506020610f7b88828901610f16565b9450506040610f8c88828901610f2b565b9350506060610f9d88828901610f2b565b9250506080610fae88828901610ee0565b9150509295509295909350565b6000610fc682610ef5565b9150610fd183610ef5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110105761100f610c2d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104d5761104c610c2d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108a57611089610c2d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c7576110c6610c2d565b5b82820290509291505056fea26469706673582212205cd1b1c1bc8a3ebb522b7a21906241bc4ebe20eadc28ba4e48bc2b7b02d3692264736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012f5780639e87a5cd1461015a578063b60d428814610185578063be2693f01461018f5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610104575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aa0565b610199565b6040516100b49190610ae6565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b2d565b6101e1565b6040516100f19190610b69565b60405180910390f35b610102610229565b005b34801561011057600080fd5b50610119610463565b6040516101269190610ae6565b60405180910390f35b34801561013b57600080fd5b50610144610470565b6040516101519190610b69565b60405180910390f35b34801561016657600080fd5b5061016f610498565b60405161017c9190610be3565b60405180910390f35b61018d6104c2565b005b6101976105fc565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106101f7576101f6610bfe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610353576000806000600184815481106102d7576102d6610bfe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061034b90610c5c565b9150506102b1565b50600067ffffffffffffffff81111561036f5761036e610ca5565b5b60405190808252806020026020018201604052801561039d5781602001602082028036833780820191505090505b50600190805190602001906103b3929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103da90610d05565b60006040518083038185875af1925050503d8060008114610417576040519150601f19603f3d011682016040523d82523d6000602084013e61041c565b606091505b5050905080610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790610d77565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610501600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ba90919063ffffffff16565b1015610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053990610de3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105909190610e03565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610681576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561070557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106bb575b5050505050905060005b81518110156107895760008060008484815181106107305761072f610bfe565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061078190610c5c565b91505061070f565b50600067ffffffffffffffff8111156107a5576107a4610ca5565b5b6040519080825280602002602001820160405280156107d35781602001602082028036833780820191505090505b50600190805190602001906107e9929190610996565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083090610d05565b60006040518083038185875af1925050503d806000811461086d576040519150601f19603f3d011682016040523d82523d6000602084013e610872565b606091505b50509050806108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90610d77565b60405180910390fd5b5050565b6000806108c6836108f6565b90506000670de0b6b3a764000085836108df9190610e59565b6108e99190610e59565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093f57600080fd5b505afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610f40565b5050509150506402540be4008161098e9190610fbb565b915050919050565b828054828255906000526020600020908101928215610a0f579160200282015b82811115610a0e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b6565b5b509050610a1c9190610a20565b5090565b5b80821115610a39576000816000905550600101610a21565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6d82610a42565b9050919050565b610a7d81610a62565b8114610a8857600080fd5b50565b600081359050610a9a81610a74565b92915050565b600060208284031215610ab657610ab5610a3d565b5b6000610ac484828501610a8b565b91505092915050565b6000819050919050565b610ae081610acd565b82525050565b6000602082019050610afb6000830184610ad7565b92915050565b610b0a81610acd565b8114610b1557600080fd5b50565b600081359050610b2781610b01565b92915050565b600060208284031215610b4357610b42610a3d565b5b6000610b5184828501610b18565b91505092915050565b610b6381610a62565b82525050565b6000602082019050610b7e6000830184610b5a565b92915050565b6000819050919050565b6000610ba9610ba4610b9f84610a42565b610b84565b610a42565b9050919050565b6000610bbb82610b8e565b9050919050565b6000610bcd82610bb0565b9050919050565b610bdd81610bc2565b82525050565b6000602082019050610bf86000830184610bd4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6782610acd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c9a57610c99610c2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cef600083610cd4565b9150610cfa82610cdf565b600082019050919050565b6000610d1082610ce2565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d61600b83610d1a565b9150610d6c82610d2b565b602082019050919050565b60006020820190508181036000830152610d9081610d54565b9050919050565b7f45544820616d6f756e7420697320746f6f206c6f770000000000000000000000600082015250565b6000610dcd601583610d1a565b9150610dd882610d97565b602082019050919050565b60006020820190508181036000830152610dfc81610dc0565b9050919050565b6000610e0e82610acd565b9150610e1983610acd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4e57610e4d610c2d565b5b828201905092915050565b6000610e6482610acd565b9150610e6f83610acd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ea857610ea7610c2d565b5b828202905092915050565b600069ffffffffffffffffffff82169050919050565b610ed281610eb3565b8114610edd57600080fd5b50565b600081519050610eef81610ec9565b92915050565b6000819050919050565b610f0881610ef5565b8114610f1357600080fd5b50565b600081519050610f2581610eff565b92915050565b600081519050610f3a81610b01565b92915050565b600080600080600060a08688031215610f5c57610f5b610a3d565b5b6000610f6a88828901610ee0565b9550506020610f7b88828901610f16565b9450506040610f8c88828901610f2b565b9350506060610f9d88828901610f2b565b9250506080610fae88828901610ee0565b9150509295509295909350565b6000610fc682610ef5565b9150610fd183610ef5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110105761100f610c2d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104d5761104c610c2d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108a57611089610c2d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c7576110c6610c2d565b5b82820290509291505056fea26469706673582212205cd1b1c1bc8a3ebb522b7a21906241bc4ebe20eadc28ba4e48bc2b7b02d3692264736f6c63430008090033",
  "devdoc": {
    "author": "Tanisk Annpurna",
    "details": "This implements price feed as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This is a sample smart contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}